name: push-docker-image

on:
  release:
    types: [published]

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Enable Corepack
        run: corepack enable
      - name: Enable PNPM
        run: corepack prepare pnpm@latest --activate
      - name: Run unit tests
        run: pnpm install-test

  #build-docker-image-with-release-name-tag:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      docker-repository: [juansecu/votatoon-api]
  #  steps:
  #    - uses: actions/checkout@v3
  #    - name: Build the Docker image
  #      run: docker build . --tag ${{ matrix.docker-repository }}:${{ github.event.release.name }}
  #    - name: Log in to the Docker Hub registry
  #      uses: docker/login-action@v2
  #      with:
  #        username: ${{ secrets.DOCKERHUB_USERNAME }}
  #        password: ${{ secrets.DOCKERHUB_TOKEN }}
  #    - name: Push the Docker image
  #      run: docker push ${{ matrix.docker-repository }}:${{ github.event.release.name }}

  build-docker-image-with-latest-tag:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-repository: [juansecu/votatoon-api]
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --tag ${{ matrix.docker-repository }}:latest
      - name: Log in to the Docker Hub registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push the Docker image
        run: docker push ${{ matrix.docker-repository }}:latest
